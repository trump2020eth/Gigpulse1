import React, { useEffect, useState } from 'react';
import { View, StyleSheet } from 'react-native';
import { Button, Card, Checkbox, Text, TextInput } from 'react-native-paper';
import { getJSON } from '../lib/storage';
export default function OrderWorthScreen(){ const [payout,setPayout]=useState('7.50'),[distance,setDistance]=useState('3.0'),[minutes,setMinutes]=useState('20'); const [mpg,setMpg]=useState(25),[gas,setGas]=useState(4.5); const [extra,setExtra]=useState({apartment:false,checkout:false,stacked:false});
  useEffect(()=>{(async()=>{ setMpg(await getJSON('mpg',25)); setGas(await getJSON('gasPerGallon',4.5)); })();},[]);
  const pay=parseFloat(payout)||0, mi=parseFloat(distance)||0; let mins=parseFloat(minutes)||0; if(extra.apartment)mins+=3; if(extra.checkout)mins+=4; if(extra.stacked)mins+=6;
  const gasCost=(mi/mpg)*gas, profit=pay-gasCost, dpm=mi>0?pay/mi:0, dph=mins>0?pay/(mins/60):0; const verdict=dpm>=2&&dph>=20&&profit>0?{label:'Great',color:'#2ECC71'}:dpm>=1.5&&dph>=16&&profit>-1?{label:'Okay',color:'#F1C40F'}:{label:'Skip',color:'#E74C3C'};
  return (<View style={styles.wrap}><Text variant="headlineSmall" style={styles.title}>Is this order worth it?</Text><Card style={styles.card}><Card.Content><View style={{flexDirection:'row',gap:8}}><TextInput mode="outlined" style={{flex:1}} label="Payout ($)" keyboardType="decimal-pad" value={payout} onChangeText={setPayout}/><TextInput mode="outlined" style={{flex:1}} label="Distance (mi)" keyboardType="decimal-pad" value={distance} onChangeText={setDistance}/><TextInput mode="outlined" style={{flex:1}} label="Time (min)" keyboardType="decimal-pad" value={minutes} onChangeText={setMinutes}/></View><View style={{flexDirection:'row',alignItems:'center',marginTop:8}}><Checkbox status={extra.apartment?'checked':'unchecked'} onPress={()=>setExtra(x=>({...x,apartment:!x.apartment}))}/><Text style={styles.cb}>Apartment</Text><Checkbox status={extra.checkout?'checked':'unchecked'} onPress={()=>setExtra(x=>({...x,checkout:!x.checkout}))}/><Text style={styles.cb}>Shop & deliver</Text><Checkbox status={extra.stacked?'checked':'unchecked'} onPress={()=>setExtra(x=>({...x,stacked:!x.stacked}))}/><Text style={styles.cb}>Stacked</Text></View></Card.Content></Card><Card style={styles.card}><Card.Content><Text style={{color:'#9aa'}}>Est. gas cost</Text><Text variant="headlineSmall">${gasCost.toFixed(2)}</Text><View style={{flexDirection:'row',gap:12,marginTop:6}}><Stat label="Profit" val={`$${profit.toFixed(2)}`}/><Stat label="$ / mile" val={`$${dpm.toFixed(2)}`}/><Stat label="$ / hour" val={`$${dph.toFixed(2)}`}/></View><Text style={{marginTop:10,color:verdict.color,fontSize:18,fontWeight:'700'}}>{verdict.label}</Text></Card.Content></Card><Text style={{color:'#9aa',fontSize:12}}>Targets: ≥ $2/mi • ≥ $20/hr • positive profit after gas.</Text></View>); }
function Stat({label,val}){ return <View style={{flex:1}}><Text style={{color:'#9aa'}}>{label}</Text><Text style={{color:'#fff',fontSize:18,fontWeight:'700'}}>{val}</Text></View>; }
const styles=StyleSheet.create({ wrap:{flex:1,backgroundColor:'#0b0b0b',padding:14,paddingTop:20}, title:{color:'#fff',marginBottom:10}, card:{backgroundColor:'#141414',marginBottom:10}, cb:{color:'#fff',marginRight:14} });
